logging.config=classpath:log4j2-console.xml

#spring.application.name=implDemo
#server.port=8088
#server.servlet.context-path=/


### dubbo config ###
#dubbo.application.name=implDemo
#dubbo.application.parameters.qos.enable=false
#dubbo.registry.protocol=zookeeper
#dubbo.registry.address=localhost:2181?timeout=100000
#dubbo.registry.username=
#dubbo.registry.password=
#dubbo.config.multiple=true
#dubbo.scan.base-packages=com.study.demo.service.impl
#dubbo.protocol.id=dubbo
#dubbo.protocol.name=dubbo
#dubbo.protocol.port=20882
#dubbo.protocol.threadpool=fixed
#dubbo.protocol.threads=200
#dubbo.provider.timeout=2000
#dubbo.consumer.timeout=2000
#dubbo.consumer.check=false
### dubbo end ###


### database  base on springboot config start ###
#spring.shardingsphere.datasource.names=ds0,ds1
#
#spring.shardingsphere.datasource.ds0.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.ds0.driver-class-name=com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.ds0.url=jdbc:mysql://127.0.0.1:3306/test0
#spring.shardingsphere.datasource.ds0.username=root
#spring.shardingsphere.datasource.ds0.password=123456
#
#spring.shardingsphere.datasource.ds1.type=com.alibaba.druid.pool.DruidDataSource
#spring.shardingsphere.datasource.ds1.driver-class-name=com.mysql.jdbc.Driver
#spring.shardingsphere.datasource.ds1.url=jdbc:mysql://127.0.0.1:3306/test1
#spring.shardingsphere.datasource.ds1.username=root
#spring.shardingsphere.datasource.ds1.password=123456
#
#spring.shardingsphere.sharding.default-database-strategy.inline.sharding-column=ssoid
#spring.shardingsphere.sharding.default-database-strategy.inline.algorithm-expression=ds$->{ssoid % 2}
#
## test env use two
#spring.shardingsphere.sharding.tables.consumer.actual-data-nodes=ds$->{0..1}.consumer_$->{0..1}
#spring.shardingsphere.sharding.tables.consumer.table-strategy.inline.sharding-column=ssoid
#spring.shardingsphere.sharding.tables.consumer.table-strategy.inline.algorithm-expression=consumer_$->{Long.valueOf(ssoid) % 2}
#spring.shardingsphere.sharding.tables.consumer.key-generator.column=id
#spring.shardingsphere.sharding.tables.consumer.key-generator.type=SNOWFLAKE
#
#spring.shardingsphere.props.sql.show=true
#
#mybatis.mapperLocations=classpath:mybatis/mappers/*.xml
### database  base on springboot config end ###


### redisson ####
#spring.redis.redisson.config=classpath:redisson.yaml
#spring.redis.redisson.config=classpath:redisson-single-node.yaml


### kafka #####
kafka.consumer.bootstrap.servers=localhost:9092
kafka.consumer.group.id=testGroup
kafka.consumer.session.timeout.ms=120000


### rocketMQ
#rocketmq.nameserver.addr=10.36.234.77:9876;10.36.234.75:9876
#rocketmq.producer.group=smarthome-lc-server
#rocketmq.producer.retry-times=3
#rocketmq.producer.timeout=10000
#rocketmq.consumer.group=smarthome-lc-server


#以下业务常量，移到在配置中心用
#test.name=张三2


